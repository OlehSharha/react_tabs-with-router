{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/TabVanLinkj/TabNavLink.tsx","data.ts","Page/TabsPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","TabNavlink","tabs","id","title","content","TabsPage","useParams","tabId","selectedTab","find","tab","map","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAQaA,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACzC,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,YAAaD,KAHlC,SAMGF,KCLQI,EAAwB,SAAC,GAAD,IAAGL,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAME,EAAb,EAAaA,SAAb,OACnC,cAAC,IAAD,CACEH,GAAIA,EACJE,UACEE,IAAW,CAAE,YAAaD,IAH9B,SAMGF,KCjBQK,EAAO,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBCE7BC,EAAW,WACtB,MAAuBC,cAAfC,aAAR,MAAgB,GAAhB,EACMC,EAAcP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOK,MAAU,KAE1D,OACE,qCACE,oBAAIV,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKU,KAAI,SAAAD,GAAG,OACX,oBACE,UAAQ,MAERb,UAAWE,IAAW,CAAE,YAAaW,EAAIR,KAAOK,IAHlD,SAKE,cAAC,EAAD,CAAYZ,GAAE,aAAQe,EAAIR,IAAMN,KAAMc,EAAIP,MAAOL,SAAUY,EAAIR,KAAOK,KAHjEG,EAAIR,WASjB,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,SACGW,EAEGA,EAAYJ,QAEZ,4BCtBCQ,EAAM,kBACjB,qCAEE,qBACEf,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,gBAKnC,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,IAAIC,QAAS,oBAAIjB,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOgB,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUnB,GAAG,IAAIoB,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,oBAAIjB,UAAU,QAAd,8BACzB,eAAC,IAAD,CAAOgB,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,oBC5B1CG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.52adb579.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink:React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'is-active': isActive },\n    )}\n  >\n    {text}\n\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n  isActive: boolean\n};\n\nexport const TabNavlink: FC<Props> = ({ to, text, isActive }) => (\n  <Link\n    to={to}\n    className={(\n      classNames({ 'is-active': isActive })\n    )}\n  >\n    {text}\n  </Link>\n);\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { TabNavlink } from '../components/TabVanLinkj/TabNavLink';\nimport { tabs } from '../data';\n\nexport const TabsPage = () => {\n  const { tabId = '' } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId) || null;\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames({ 'is-active': tab.id === tabId })}\n            >\n              <TabNavlink to={`../${tab.id}`} text={tab.title} isActive={tab.id === tabId} />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab\n          ? (\n            selectedTab.content\n          ) : (\n            'Please select a tab'\n          )}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { PageNavLink } from './components/PageNavLink/PageNavLink';\nimport { TabsPage } from './Page/TabsPage';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}